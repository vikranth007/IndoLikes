{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dfbe3871",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-05-08T04:54:40.529320Z",
     "iopub.status.busy": "2025-05-08T04:54:40.528945Z",
     "iopub.status.idle": "2025-05-08T04:54:42.391312Z",
     "shell.execute_reply": "2025-05-08T04:54:42.390317Z"
    },
    "papermill": {
     "duration": 1.869766,
     "end_time": "2025-05-08T04:54:42.392779",
     "exception": false,
     "start_time": "2025-05-08T04:54:40.523013",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/genre-classification-dataset-imdb/Genre Classification Dataset/description.txt\n",
      "/kaggle/input/genre-classification-dataset-imdb/Genre Classification Dataset/test_data_solution.txt\n",
      "/kaggle/input/genre-classification-dataset-imdb/Genre Classification Dataset/test_data.txt\n",
      "/kaggle/input/genre-classification-dataset-imdb/Genre Classification Dataset/train_data.txt\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "18959ce5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:54:42.402812Z",
     "iopub.status.busy": "2025-05-08T04:54:42.402383Z",
     "iopub.status.idle": "2025-05-08T04:54:43.361068Z",
     "shell.execute_reply": "2025-05-08T04:54:43.359950Z"
    },
    "papermill": {
     "duration": 0.965615,
     "end_time": "2025-05-08T04:54:43.363043",
     "exception": false,
     "start_time": "2025-05-08T04:54:42.397428",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_path = '/kaggle/input/genre-classification-dataset-imdb/Genre Classification Dataset/train_data.txt'\n",
    "\n",
    "train_data = pd.read_csv(train_path, sep=':::', names=['Title', 'Genre', 'Description'], engine='python')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "f0294a7c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:54:43.379561Z",
     "iopub.status.busy": "2025-05-08T04:54:43.379158Z",
     "iopub.status.idle": "2025-05-08T04:54:43.401492Z",
     "shell.execute_reply": "2025-05-08T04:54:43.400115Z"
    },
    "papermill": {
     "duration": 0.031514,
     "end_time": "2025-05-08T04:54:43.403379",
     "exception": false,
     "start_time": "2025-05-08T04:54:43.371865",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_data = train_data.sample(n=5000, random_state=42).reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e6538452",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:54:43.415048Z",
     "iopub.status.busy": "2025-05-08T04:54:43.414712Z",
     "iopub.status.idle": "2025-05-08T04:54:43.444161Z",
     "shell.execute_reply": "2025-05-08T04:54:43.442940Z"
    },
    "papermill": {
     "duration": 0.038122,
     "end_time": "2025-05-08T04:54:43.446678",
     "exception": false,
     "start_time": "2025-05-08T04:54:43.408556",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 5000 entries, 0 to 4999\n",
      "Data columns (total 3 columns):\n",
      " #   Column       Non-Null Count  Dtype \n",
      "---  ------       --------------  ----- \n",
      " 0   Title        5000 non-null   object\n",
      " 1   Genre        5000 non-null   object\n",
      " 2   Description  5000 non-null   object\n",
      "dtypes: object(3)\n",
      "memory usage: 117.3+ KB\n"
     ]
    }
   ],
   "source": [
    "train_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c940ce11",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:54:43.462147Z",
     "iopub.status.busy": "2025-05-08T04:54:43.461833Z",
     "iopub.status.idle": "2025-05-08T04:54:43.473178Z",
     "shell.execute_reply": "2025-05-08T04:54:43.472347Z"
    },
    "papermill": {
     "duration": 0.020647,
     "end_time": "2025-05-08T04:54:43.474612",
     "exception": false,
     "start_time": "2025-05-08T04:54:43.453965",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Title          0\n",
       "Genre          0\n",
       "Description    0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0cbfabf7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:54:43.483814Z",
     "iopub.status.busy": "2025-05-08T04:54:43.483477Z",
     "iopub.status.idle": "2025-05-08T04:54:44.345321Z",
     "shell.execute_reply": "2025-05-08T04:54:44.344533Z"
    },
    "papermill": {
     "duration": 0.86821,
     "end_time": "2025-05-08T04:54:44.346915",
     "exception": false,
     "start_time": "2025-05-08T04:54:43.478705",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_path = '/kaggle/input/genre-classification-dataset-imdb/Genre Classification Dataset/test_data.txt'\n",
    "test_data = pd.read_csv(test_path, sep=':::', names=['ID', 'Genre', 'Description'], engine='python')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "16f6dfe4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:54:44.356255Z",
     "iopub.status.busy": "2025-05-08T04:54:44.355961Z",
     "iopub.status.idle": "2025-05-08T04:54:44.370853Z",
     "shell.execute_reply": "2025-05-08T04:54:44.370190Z"
    },
    "papermill": {
     "duration": 0.021336,
     "end_time": "2025-05-08T04:54:44.372327",
     "exception": false,
     "start_time": "2025-05-08T04:54:44.350991",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "test_data = test_data.sample(n=5000, random_state=42).reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "13cf27b0",
   "metadata": {
    "papermill": {
     "duration": 0.003683,
     "end_time": "2025-05-08T04:54:44.380022",
     "exception": false,
     "start_time": "2025-05-08T04:54:44.376339",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## EDA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "759bcfae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:54:44.389763Z",
     "iopub.status.busy": "2025-05-08T04:54:44.389387Z",
     "iopub.status.idle": "2025-05-08T04:54:46.618007Z",
     "shell.execute_reply": "2025-05-08T04:54:46.617012Z"
    },
    "papermill": {
     "duration": 2.236262,
     "end_time": "2025-05-08T04:54:46.620170",
     "exception": false,
     "start_time": "2025-05-08T04:54:44.383908",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x1500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "plt.figure(figsize=(10, 15))\n",
    "sns.countplot(data=train_data, y=\"Genre\", order=train_data[\"Genre\"].value_counts().index)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6027657c",
   "metadata": {
    "papermill": {
     "duration": 0.004453,
     "end_time": "2025-05-08T04:54:46.629500",
     "exception": false,
     "start_time": "2025-05-08T04:54:46.625047",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data Preprocesing"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "104c4655",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:54:46.640051Z",
     "iopub.status.busy": "2025-05-08T04:54:46.639564Z",
     "iopub.status.idle": "2025-05-08T04:54:47.578150Z",
     "shell.execute_reply": "2025-05-08T04:54:47.577249Z"
    },
    "papermill": {
     "duration": 0.945862,
     "end_time": "2025-05-08T04:54:47.579916",
     "exception": false,
     "start_time": "2025-05-08T04:54:46.634054",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import re\n",
    "import string\n",
    "import nltk\n",
    "from nltk.corpus import stopwords\n",
    "from nltk.stem import LancasterStemmer\n",
    "\n",
    "# Make sure required NLTK data is downloaded   use dont download this nltk.But, you working with local most download this.\n",
    "# nltk.download('punkt')\n",
    "# nltk.download('stopwords')\n",
    "\n",
    "# Initialize\n",
    "stemmer = LancasterStemmer()\n",
    "stop_words = set(stopwords.words('english'))\n",
    "\n",
    "def cleaning_data(text):\n",
    "    text = text.lower()\n",
    "    text = re.sub(r'@\\w+', '', text)              # Remove @mentions\n",
    "    text = re.sub(r'http\\S+', '', text)           # Remove URLs\n",
    "    text = re.sub(r'pic\\.twitter\\.com/\\S+', '', text)  # Remove Twitter pic links\n",
    "    text = re.sub(r'[^a-z\\s]', '', text)          # Keep only letters and spaces\n",
    "    text = re.sub(r'\\s+', ' ', text).strip()      # Remove extra spaces\n",
    "\n",
    "    words = nltk.word_tokenize(text)\n",
    "    words = [stemmer.stem(word) for word in words if word not in stop_words and len(word) > 2]\n",
    "\n",
    "    return \" \".join(words)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "14581987",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:54:47.590835Z",
     "iopub.status.busy": "2025-05-08T04:54:47.590445Z",
     "iopub.status.idle": "2025-05-08T04:54:58.667841Z",
     "shell.execute_reply": "2025-05-08T04:54:58.666824Z"
    },
    "papermill": {
     "duration": 11.084784,
     "end_time": "2025-05-08T04:54:58.669614",
     "exception": false,
     "start_time": "2025-05-08T04:54:47.584830",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train_data[\"TextCleaning\"] = train_data[\"Description\"].apply(cleaning_data)\n",
    "test_data[\"TextCleaning\"] = test_data[\"Description\"].apply(cleaning_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f6aad86d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:54:58.680434Z",
     "iopub.status.busy": "2025-05-08T04:54:58.680105Z",
     "iopub.status.idle": "2025-05-08T04:54:58.684379Z",
     "shell.execute_reply": "2025-05-08T04:54:58.683484Z"
    },
    "papermill": {
     "duration": 0.011329,
     "end_time": "2025-05-08T04:54:58.685872",
     "exception": false,
     "start_time": "2025-05-08T04:54:58.674543",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "\n",
    "vector = TfidfVectorizer(max_features=5000, stop_words='english')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "4e27576d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:54:58.696638Z",
     "iopub.status.busy": "2025-05-08T04:54:58.696278Z",
     "iopub.status.idle": "2025-05-08T04:54:59.297306Z",
     "shell.execute_reply": "2025-05-08T04:54:59.296548Z"
    },
    "papermill": {
     "duration": 0.608353,
     "end_time": "2025-05-08T04:54:59.299012",
     "exception": false,
     "start_time": "2025-05-08T04:54:58.690659",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_train  = vector.fit_transform(train_data[\"TextCleaning\"]) \n",
    "X_test = vector.fit_transform(test_data[\"TextCleaning\"]) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "424357a0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:54:59.309821Z",
     "iopub.status.busy": "2025-05-08T04:54:59.309524Z",
     "iopub.status.idle": "2025-05-08T04:54:59.313516Z",
     "shell.execute_reply": "2025-05-08T04:54:59.312741Z"
    },
    "papermill": {
     "duration": 0.011018,
     "end_time": "2025-05-08T04:54:59.314928",
     "exception": false,
     "start_time": "2025-05-08T04:54:59.303910",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = X_train\n",
    "y = train_data[\"Genre\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "d18b0e76",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:54:59.325643Z",
     "iopub.status.busy": "2025-05-08T04:54:59.325207Z",
     "iopub.status.idle": "2025-05-08T04:54:59.329712Z",
     "shell.execute_reply": "2025-05-08T04:54:59.329040Z"
    },
    "papermill": {
     "duration": 0.011201,
     "end_time": "2025-05-08T04:54:59.330994",
     "exception": false,
     "start_time": "2025-05-08T04:54:59.319793",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.svm import SVC\n",
    "from sklearn.model_selection import train_test_split\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "2b8bfed0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:54:59.342222Z",
     "iopub.status.busy": "2025-05-08T04:54:59.341933Z",
     "iopub.status.idle": "2025-05-08T04:54:59.349826Z",
     "shell.execute_reply": "2025-05-08T04:54:59.349026Z"
    },
    "papermill": {
     "duration": 0.015432,
     "end_time": "2025-05-08T04:54:59.351268",
     "exception": false,
     "start_time": "2025-05-08T04:54:59.335836",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_train, X_test, y_train,y_test = train_test_split(X, y, test_size=0.2, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "a78a5bac",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:54:59.361945Z",
     "iopub.status.busy": "2025-05-08T04:54:59.361646Z",
     "iopub.status.idle": "2025-05-08T04:55:28.482630Z",
     "shell.execute_reply": "2025-05-08T04:55:28.481474Z"
    },
    "papermill": {
     "duration": 29.12823,
     "end_time": "2025-05-08T04:55:28.484290",
     "exception": false,
     "start_time": "2025-05-08T04:54:59.356060",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "SVC()"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model = SVC()\n",
    "model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "62bbef95",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:55:28.496149Z",
     "iopub.status.busy": "2025-05-08T04:55:28.495842Z",
     "iopub.status.idle": "2025-05-08T04:55:35.835499Z",
     "shell.execute_reply": "2025-05-08T04:55:35.834640Z"
    },
    "papermill": {
     "duration": 7.347258,
     "end_time": "2025-05-08T04:55:35.837063",
     "exception": false,
     "start_time": "2025-05-08T04:55:28.489805",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8595"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.score(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "ea23a42c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:55:35.849139Z",
     "iopub.status.busy": "2025-05-08T04:55:35.848840Z",
     "iopub.status.idle": "2025-05-08T04:55:37.717426Z",
     "shell.execute_reply": "2025-05-08T04:55:37.716534Z"
    },
    "papermill": {
     "duration": 1.876521,
     "end_time": "2025-05-08T04:55:37.718973",
     "exception": false,
     "start_time": "2025-05-08T04:55:35.842452",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([' drama ', ' documentary ', ' drama ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' drama ', ' comedy ',\n",
       "       ' drama ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' documentary ', ' comedy ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' documentary ', ' comedy ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' drama ', ' comedy ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' documentary ', ' comedy ',\n",
       "       ' drama ', ' drama ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' documentary ', ' drama ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' drama ', ' documentary ', ' documentary ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' comedy ', ' documentary ', ' drama ', ' family ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' documentary ', ' documentary ',\n",
       "       ' comedy ', ' drama ', ' documentary ', ' drama ', ' documentary ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' comedy ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' documentary ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' horror ', ' documentary ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' drama ', ' documentary ', ' documentary ',\n",
       "       ' drama ', ' comedy ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' drama ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' drama ', ' drama ', ' comedy ', ' documentary ', ' documentary ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' documentary ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' comedy ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' documentary ',\n",
       "       ' drama ', ' comedy ', ' drama ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' drama ', ' drama ', ' comedy ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' documentary ', ' comedy ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' documentary ', ' documentary ',\n",
       "       ' documentary ', ' documentary ', ' drama ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' comedy ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' documentary ', ' documentary ',\n",
       "       ' documentary ', ' comedy ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' comedy ', ' drama ', ' drama ', ' comedy ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' drama ', ' comedy ',\n",
       "       ' comedy ', ' comedy ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' documentary ',\n",
       "       ' documentary ', ' comedy ', ' drama ', ' drama ', ' drama ',\n",
       "       ' comedy ', ' drama ', ' documentary ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' comedy ', ' drama ', ' documentary ', ' drama ', ' documentary ',\n",
       "       ' drama ', ' comedy ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' drama ', ' documentary ', ' comedy ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' documentary ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' drama ', ' comedy ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' comedy ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' comedy ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' drama ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' documentary ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' drama ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' documentary ', ' comedy ',\n",
       "       ' documentary ', ' comedy ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' drama ', ' comedy ',\n",
       "       ' documentary ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' western ', ' drama ', ' documentary ', ' documentary ',\n",
       "       ' documentary ', ' documentary ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' documentary ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' documentary ', ' documentary ', ' drama ',\n",
       "       ' comedy ', ' comedy ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' documentary ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' drama ', ' drama ', ' documentary ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' documentary ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' drama ', ' comedy ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' drama ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' comedy ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' drama ', ' comedy ', ' drama ',\n",
       "       ' comedy ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' drama ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' drama ', ' documentary ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' comedy ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' comedy ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' documentary ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' comedy ', ' documentary ', ' documentary ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' comedy ', ' drama ', ' comedy ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' comedy ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' comedy ', ' documentary ', ' drama ', ' drama ', ' comedy ',\n",
       "       ' drama ', ' drama ', ' drama ', ' documentary ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' drama ', ' documentary ', ' drama ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' comedy ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' comedy ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' drama ', ' documentary ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' comedy ', ' comedy ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' drama ', ' drama ', ' documentary ', ' documentary ',\n",
       "       ' documentary ', ' documentary ', ' comedy ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' comedy ', ' drama ', ' documentary ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' comedy ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' documentary ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' comedy ', ' documentary ', ' documentary ',\n",
       "       ' documentary ', ' documentary ', ' drama ', ' comedy ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' horror ', ' drama ',\n",
       "       ' drama ', ' comedy ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' comedy ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' drama ', ' comedy ',\n",
       "       ' drama ', ' drama ', ' comedy ', ' drama ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' drama ', ' drama ', ' comedy ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' documentary ', ' documentary ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' drama ', ' drama ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' documentary ', ' drama ', ' documentary ',\n",
       "       ' comedy ', ' documentary ', ' documentary ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' documentary ',\n",
       "       ' documentary ', ' documentary ', ' drama ', ' drama ',\n",
       "       ' documentary ', ' drama ', ' drama ', ' drama ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' comedy ', ' drama ', ' documentary ',\n",
       "       ' drama ', ' documentary ', ' drama ', ' documentary ', ' drama ',\n",
       "       ' drama ', ' documentary ', ' documentary '], dtype=object)"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_pred = model.predict(X_test)\n",
    "y_pred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "8e29af04",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-05-08T04:55:37.731167Z",
     "iopub.status.busy": "2025-05-08T04:55:37.730891Z",
     "iopub.status.idle": "2025-05-08T04:55:37.769113Z",
     "shell.execute_reply": "2025-05-08T04:55:37.768179Z"
    },
    "papermill": {
     "duration": 0.046143,
     "end_time": "2025-05-08T04:55:37.770728",
     "exception": false,
     "start_time": "2025-05-08T04:55:37.724585",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Validation Accuracy: 0.432\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "      action        0.00      0.00      0.00        25\n",
      "       adult        0.00      0.00      0.00        13\n",
      "   adventure        0.00      0.00      0.00        13\n",
      "   animation        0.00      0.00      0.00         6\n",
      "   biography        0.00      0.00      0.00         2\n",
      "      comedy        0.44      0.18      0.25       154\n",
      "       crime        0.00      0.00      0.00        13\n",
      " documentary        0.56      0.85      0.68       245\n",
      "       drama        0.34      0.85      0.49       228\n",
      "      family        1.00      0.08      0.14        13\n",
      "     fantasy        0.00      0.00      0.00         7\n",
      "   game-show        0.00      0.00      0.00         4\n",
      "     history        0.00      0.00      0.00         6\n",
      "      horror        0.50      0.02      0.04        44\n",
      "       music        0.00      0.00      0.00        16\n",
      "     musical        0.00      0.00      0.00         3\n",
      "     mystery        0.00      0.00      0.00         2\n",
      "        news        0.00      0.00      0.00         6\n",
      "  reality-tv        0.00      0.00      0.00        15\n",
      "     romance        0.00      0.00      0.00        14\n",
      "      sci-fi        0.00      0.00      0.00        16\n",
      "       short        0.00      0.00      0.00        96\n",
      "       sport        0.00      0.00      0.00         7\n",
      "   talk-show        0.00      0.00      0.00         5\n",
      "    thriller        0.00      0.00      0.00        32\n",
      "         war        0.00      0.00      0.00         1\n",
      "     western        1.00      0.07      0.13        14\n",
      "\n",
      "     accuracy                           0.43      1000\n",
      "    macro avg       0.14      0.08      0.06      1000\n",
      " weighted avg       0.33      0.43      0.32      1000\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score, classification_report\n",
    "\n",
    "accuracy = accuracy_score(y_test, y_pred)\n",
    "\n",
    "print(\"Validation Accuracy:\", accuracy)\n",
    "print(classification_report(y_test, y_pred,zero_division=0))\n"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [
    {
     "datasetId": 1417162,
     "sourceId": 2347441,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31012,
   "isGpuEnabled": false,
   "isInternetEnabled": false,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 62.923164,
   "end_time": "2025-05-08T04:55:38.597375",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-05-08T04:54:35.674211",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
